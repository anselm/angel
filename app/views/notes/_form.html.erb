<%=
# TODO use a form builder; such as from previous projects; for now this will conflate viewing and editing.
def form_text_field(form,name)
  return form.text_field(name) if @interactive == 1
  return "<span class='input'>#{@note.send(name)}</span>"
end
def form_file_field(form,name)
  return form.file_field(name) if @interactive == 1
  return "<span class='input'>#{@note.send(name)}</span>"
end
def form_menu_field(form,name)
  return select("note","kind",Note::KINDS,{:include_blank => 'None'}) if @interactive == 1
  return @note.send(name)
end
def form_submit_field(form,name)
  return form.submit name if @interactive == 1
  return ""
end
%>

<h2>Main Properties</h2>
	<label class='inputdialog'>&nbsp;</label>			<%= form_submit_field form,:Save %><br/>
	<label class='inputdialog'>Title</label>			<%= form_text_field form,:title %><br/>
	<label class='inputdialog'>Link</label>				<%= form_text_field form,:link %><br/>
    <label class='inputdialog'>Description</label>		<%= form_text_field form,:description %><br/>
    <label class='inputdialog'>Tags</label>				<%= form_text_field form,:tagstring %><br/>
    <label class='inputdialog'>Location</label>			<%= form_text_field form,:location %><br/>
    <label class='inputdialog'>Latitude</label>			<%= form_text_field form,:lat %><br/>
    <label class='inputdialog'>Longitude</label>		<%= form_text_field form,:lon %><br/>
    <label class='inputdialog'>Radius </label>			<%= form_text_field form,:rad %><br/>
    <label class='inputdialog'>Begins</label>			<%= form_text_field form,:begins %><br/>
    <label class='inputdialog'>Ends</label>				<%= form_text_field form,:ends %><br/>
    <label class='inputdialog'>Photo</label>			<%= form_file_field form,:photo %><br/>
	<label class='inputdialog'>&nbsp;</label>

	<% if @note.photo.exists? then %>
		<%= image_tag @note.photo.url(:small) %><br/>
	<% else %>
		<img src="/images/default.jpg" width="50" height="50" style="border: 4px ridge grey" /><br/>
	<% end %>
	<br>

<h2>Admin</h2>
    <label class='inputdialog'>kind </label>			<%= form_menu_field form,:kind %><br/>
    <label class='inputdialog'>uuid </label>			<%= form_text_field form,:uuid %><br/>
	<label class='inputdialog'>provenance </label>		<%= form_text_field form,:provenance %><br/>
    <label class='inputdialog'>permissions </label>		<%= form_text_field form,:permissions %><br/>
    <label class='inputdialog'>statebits </label>		<%= form_text_field form,:statebits %><br/>
    <label class='inputdialog'>depth </label>			<%= form_text_field form,:depth %><br/>
    <label class='inputdialog'>score </label>			<%= form_text_field form,:score %><br/>
    <label class='inputdialog'>owner_id </label>		<%= form_text_field form,:owner_id %><br/>

	<label class='inputdialog'>&nbsp;</label>			<%= form_submit_field form,:Save %>

<h2>Relationships</h2>

<%

# maybe i can embed a relation ui printer as a series of iframes
# or i can use uh activescaffold
# or build a js gateway

    query = { :note_id => @note.id }
    relations = Relation.find(:all,:conditions=>query)
	relations.each do |r|
		%><%= select("note","kind",Note::KINDS,{:include_blank => 'None'})
	end
%>

	<%= form_menu_field form,:kind %><br/>

  return  if @interactive == 1

    <label class='inputdialog'>uuid </label>			<%= form_text_field form,:uuid %><br/>
	<label class='inputdialog'>provenance </label>		<%= form_text_field form,:provenance %><br/>


<% end %>

show all the relations and let you add a new one or delete an existing one

for each
  print name
  print value
  print sibling

%>

